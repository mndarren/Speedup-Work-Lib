# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

jobs:
- job: runner
  timeoutInMinutes: 5 # how long to run the job before automatically cancelling
  cancelTimeoutInMinutes: 1 # how much time to give 'run always even if cancelled tasks' before stopping them
  pool:
    vmImage: ubuntu-latest
  strategy:
    matrix:
      Python37:
        python.version: '3.7'
  steps:
  - task: UsePythonVersion@0
    displayName: 'Use Python $(python.version)'
    inputs:
      versionSpec: '$(python.version)'

  - script: |
      python -m pip install --upgrade pip
      pip install -r requirements.txt
    displayName: 'Install dependencies'

  - script: |
      python -m pip install --upgrade pip setuptools wheel twine
      python -m pip install pytest pytest-azurepipelines
    displayName: 'Install tools'

  - script: |
      pytest
    displayName: 'Test package'

  # Build the python distribution from source
  - script: |
      python setup.py bdist_wheel
    displayName: 'Build package'

  - task: TwineAuthenticate@1
    inputs:
      # In this case, name of the feed is 'myTestFeed' in the project 'myTestProject'.
      # Project is needed because the feed is project scoped.
  #    artifactFeed: Speedup_Work_Lib/MIS_Python_Feed
      pythonUploadServiceConnection: pypi
    displayName: 'Twine Authenticate'

  # Use command line script to 'twine upload', use -r to pass the repository name and
  # --config-file to pass the environment variable set by the authenticate task.
  - script: |
      python -m twine upload -r 'pypi' --config-file $(PYPIRC_PATH) dist/*
  #    python -m twine upload -r MIS_Python_Feed --config-file $(PYPIRC_PATH) dist/*
    displayName: 'Deploy package'
